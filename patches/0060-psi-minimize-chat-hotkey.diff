--- a/options/default.xml
+++ b/options/default.xml
@@ -607,6 +607,7 @@ QLineEdit#le_status_text {
                 <show-messageNext type="QKeySequence" comment="Show next message" >Ctrl+Down</show-messageNext>
                 <show-messagePrev type="QKeySequence" comment="Show prev message" >Ctrl+Up</show-messagePrev>
                 <change-case type="QKeySequence" comment="Change case of letters in the chat edit" >Ctrl+Alt+x</change-case>
+                <minimize type="QKeySequence" comment="Minimize active chat window"/>
             </chat>
             <contactlist comment="Shortcuts in the contactlist">
                 <assign-custom-avatar type="QKeySequence" comment="Assign a custom avatar to the selected contact"/>
--- a/src/groupchatdlg.cpp
+++ b/src/groupchatdlg.cpp
@@ -233,6 +233,7 @@ public:
 //#endif
     QAction *act_send, *act_scrollup, *act_scrolldown, *act_close;
     QAction *act_mini_cmd, *act_nick, *act_hide, *act_copy_muc_jid;
+    QAction *act_minimize;
 
     MCmdSimpleSite mCmdSite;
     MCmdManager mCmdManager;
@@ -968,6 +969,10 @@ GCMainDlg::GCMainDlg(PsiAccount *pa, const Jid &j, TabManager *tabManager)
     d->act_pastesend = new IconAction(tr("Paste and Send"), "psi/action_paste_and_send", tr("Paste and Send"), 0, this);
     connect(d->act_pastesend, SIGNAL(triggered()), SLOT(doPasteAndSend()));
 
+    d->act_minimize = new QAction(this);
+    connect(d->act_minimize, SIGNAL(triggered()), SLOT(doMinimize()));
+    addAction(d->act_minimize);
+
     int s = PsiIconset::instance()->system().iconSize();
     ui_.toolbar->setIconSize(QSize(s,s));
 
@@ -1098,6 +1103,11 @@ void GCMainDlg::horizSplitterMoved()
     PsiOptions::instance()->setOption("options.ui.muc.roster-width", d->rosterSize);
 }
 
+void GCMainDlg::doMinimize()
+{
+    window()->showMinimized();
+}
+
 void GCMainDlg::ensureTabbedCorrectly()
 {
     TabbableWidget::ensureTabbedCorrectly();
@@ -1141,6 +1151,7 @@ void GCMainDlg::setShortcuts()
     d->act_scrollup->setShortcuts(ShortcutManager::instance()->shortcuts("common.scroll-up"));
     d->act_scrolldown->setShortcuts(ShortcutManager::instance()->shortcuts("common.scroll-down"));
     d->act_mini_cmd->setShortcuts(ShortcutManager::instance()->shortcuts("chat.quick-command"));
+    d->act_minimize->setShortcuts(ShortcutManager::instance()->shortcuts("chat.minimize"));
 }
 
 void GCMainDlg::scrollUp()
--- a/src/groupchatdlg.h
+++ b/src/groupchatdlg.h
@@ -153,6 +153,7 @@ private slots:
     void sendTemp(const QString &);
     void psButtonEnabled();
     void horizSplitterMoved();
+    void doMinimize();
     void avatarUpdated(const Jid& jid);
     void doContactContextMenu(const QString &nick);
 
--- a/src/psichatdlg.cpp
+++ b/src/psichatdlg.cpp
@@ -375,6 +375,11 @@ void PsiChatDlg::setShortcuts()
 
     act_mini_cmd_->setShortcuts(ShortcutManager::instance()->shortcuts("chat.quick-command"));
 
+    act_minimize_ = new QAction(this);
+
+    connect(act_minimize_, SIGNAL(triggered()), SLOT(doMinimize()));
+    addAction(act_minimize_);
+    act_minimize_->setShortcuts(ShortcutManager::instance()->shortcuts("chat.minimize"));
 }
 
 void PsiChatDlg::updateIdentityVisibility()
@@ -1017,6 +1022,10 @@ bool PsiChatDlg::eventFilter( QObject *obj, QEvent *ev ) {
     return ChatDlg::eventFilter( obj, ev );
 }
 
+void PsiChatDlg::doMinimize()
+{
+    window()->showMinimized();
+}
 
 QString PsiChatDlg::makeContactName(const QString &name, const Jid &jid) const
 {
--- a/src/psichatdlg.h
+++ b/src/psichatdlg.h
@@ -36,6 +36,7 @@ private slots:
     void toggleSmallChat();
     void doClearButton();
     void doMiniCmd();
+    void doMinimize();
     void addContact();
     void buildMenu();
     void updateCounter();
@@ -90,6 +91,7 @@ private:
 
     ActionList* actions_;
     QAction *act_mini_cmd_;
+    QAction *act_minimize_;
     TypeAheadFindBar *typeahead_;
 
     ActionLineEdit *le_autojid;
