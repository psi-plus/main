diff --git a/CMakeLists.txt b/CMakeLists.txt
index aa0ed2ff..4f03e062 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -63,6 +63,8 @@ option( ENABLE_PORTABLE "Create portable version of Psi+ in win32" OFF )
 #Apple only
 if(APPLE)
     option( USE_SPARKLE "Use Sparkle for APPLE builds" ON )
+    option( USE_GROWL "Use growl for macOS builds" OFF )
+    option( USE_MAC_DOC "Use macOS dock" OFF )
 endif()
 
 if( USE_HUNSPELL AND USE_ENCHANT )
@@ -98,7 +100,7 @@ if(ENABLE_WEBKIT)
     message(STATUS "Webkit - enabled")
 endif()
 
-message(STATUS "SQL history - enabled since 1.4.444 version")
+message(STATUS "SQL history - built-in since 1.4.444 version")
 
 if(USE_WEBENGINE AND USE_WEBKIT)
     message(FATAL_ERROR "Both flags USE_WEBENGINE and USE_WEBKIT cannot be enabled at the same time. Please disable one of them")
diff --git a/src/AutoUpdater/CMakeLists.txt b/src/AutoUpdater/CMakeLists.txt
index cd9256c5..5fce75fc 100644
--- a/src/AutoUpdater/CMakeLists.txt
+++ b/src/AutoUpdater/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 if(WIN32 AND IS_PSIPLUS)
@@ -16,11 +13,11 @@ include_directories(
     ../
 )
 
-list(APPEND PLAIN_HEADERS
+list(APPEND HEADERS
     AutoUpdater.h
 )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     AutoUpdater.cpp
 )
 
@@ -41,7 +38,7 @@ if(USE_QDCHECKER)
     list(APPEND HEADERS
         QDChecker.h
     )
-    list(APPEND PLAIN_SOURCES
+    list(APPEND SOURCES
         QDChecker.cpp
     )
     list(APPEND FORMS
@@ -58,8 +55,7 @@ if(USE_QDCHECKER)
 endif()
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(AutoUpdater STATIC ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(AutoUpdater STATIC ${HEADERS} ${SOURCES} ${UI_FORMS})
 if(USE_QDCHECKER)
     add_dependencies(AutoUpdater build_ui_files tools widgets)
 endif()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 151e6d00..1a73f716 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -4,7 +4,7 @@ set( CMAKE_MODULE_PATH
     "${CMAKE_MODULE_PATH}"
     "${CMAKE_CURRENT_SOURCE_DIR}"
     "${PROJECT_SOURCE_DIR}/cmake/modules" )
-set(CMAKE_AUTOMOC OFF)
+set(CMAKE_AUTOMOC ON)
 
 if(LINUX)
     set(LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)")
@@ -117,25 +117,6 @@ if(USE_HUNSPELL)
     endif()
 endif()
 
-macro(qt_wrap_cpp)
-    set(_SOURCES ${ARGN})
-    list(REMOVE_AT _SOURCES 0)
-    foreach(SOURCE ${_SOURCES})
-        if(SOURCE MATCHES "^(.*/|)([^/.]+)\\.h$")
-            set(DEST "moc_${CMAKE_MATCH_2}.cpp")
-            qt5_generate_moc(${SOURCE} ${DEST} TARGET ${PROJECT_NAME})
-            list(APPEND ${ARGV0} ${DEST})
-        elseif(SOURCE MATCHES "^(.*/|)([^/.]+)\\.cpp$")
-            set(DEST "${CMAKE_MATCH_2}.moc")
-            qt5_generate_moc(${SOURCE} ${DEST} TARGET ${PROJECT_NAME})
-            list(APPEND ${ARGV0} ${DEST})
-        else()
-            message(WARNING "Wrong source ${SOURCE}")
-        endif()
-    endforeach()
-    unset(_SOURCES)
-endmacro()
-
 include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}
     ${CMAKE_CURRENT_BINARY_DIR}
@@ -263,9 +244,7 @@ set(RESOURCES
 qt5_add_resources(QRC_SOURCES ${RESOURCES})
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-add_custom_target(build_ui_files DEPENDS "${UI_FORMS}" SOURCES "${FORMS}")
-
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
+add_custom_target(build_ui_files DEPENDS "${UI_FORMS}")# SOURCES "${FORMS}")
 
 if(WIN32)
     if(IS_PSIPLUS)
@@ -325,10 +304,7 @@ add_executable(${PROJECT_NAME}
     MACOSX_BUNDLE
     ${SOURCES}
     ${HEADERS}
-    ${MOC_SOURCES}
     ${UI_FORMS}
-    ${PLAIN_SOURCES}
-    ${PLAIN_HEADERS}
     ${QRC_SOURCES}
     ${QM}
     ${RC_FILE}
diff --git a/src/Certificates/CMakeLists.txt b/src/Certificates/CMakeLists.txt
index ad315659..04072b7b 100644
--- a/src/Certificates/CMakeLists.txt
+++ b/src/Certificates/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 include_directories(
@@ -18,20 +15,17 @@ list(APPEND FORMS
 list(APPEND HEADERS
     CertificateDisplayDialog.h
     CertificateErrorDialog.h
-)
 
-list(APPEND PLAIN_HEADERS
     CertificateHelpers.h
 )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     CertificateDisplayDialog.cpp
     CertificateErrorDialog.cpp
     CertificateHelpers.cpp
 )
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(Certificates STATIC ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(Certificates STATIC ${HEADERS} ${SOURCES} ${UI_FORMS})
 target_link_libraries(Certificates ${QT_LIBRARIES} ${iris_LIB})
 target_include_directories(Certificates PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/CocoaUtilities/CMakeLists.txt b/src/CocoaUtilities/CMakeLists.txt
index f37df432..ea9444ee 100644
--- a/src/CocoaUtilities/CMakeLists.txt
+++ b/src/CocoaUtilities/CMakeLists.txt
@@ -1,25 +1,20 @@
 unset(HEADERS)
-unset(PLAIN_HEADERS)
-unset(PLAIN_SOURCES)
+unset(SOURCES)
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
 
-list(APPEND PLAIN_HEADERS
+list(APPEND HEADERS
     cocoacommon.h
     CocoaInitializer.h
-    )
-
-list(APPEND HEADERS
     CocoaTrayClick.h
     )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     cocoacommon.mm
     CocoaInitializer.mm
     CocoaTrayClick.cpp
     )
 
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(CocoaUtilities STATIC ${HEADERS} ${MOC_SOURCES} ${PLAIN_HEADERS} ${PLAIN_SOURCES})
+add_library(CocoaUtilities STATIC ${HEADERS} ${SOURCES})
 target_link_libraries(CocoaUtilities ${QT_LIBRARIES} widgets)
 target_include_directories(CocoaUtilities PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/avcall/CMakeLists.txt b/src/avcall/CMakeLists.txt
index 99a24751..a9a56a74 100644
--- a/src/avcall/CMakeLists.txt
+++ b/src/avcall/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 include_directories(
@@ -25,9 +22,7 @@ set(SOURCES
     jinglertp.cpp
     avcall.cpp
     calldlg.cpp
-)
 
-set(PLAIN_SOURCES
     jinglertptasks.cpp
     mediadevicewatcher.cpp
 )
@@ -37,8 +32,7 @@ set(FORMS
 )
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(avcall STATIC ${SOURCES} ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(avcall STATIC ${SOURCES} ${HEADERS} ${UI_FORMS})
 add_dependencies(avcall build_ui_files)
 target_link_libraries(avcall ${QT_LIBRARIES} ${iris_LIB} libpsi_tools widgets)
 target_include_directories(avcall PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/contactmanager/CMakeLists.txt b/src/contactmanager/CMakeLists.txt
index 041740b3..faffe101 100644
--- a/src/contactmanager/CMakeLists.txt
+++ b/src/contactmanager/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 unset(EXTRA_LDFLAGS)
 
@@ -15,7 +12,7 @@ list(APPEND HEADERS
     contactmanagerview.h
 )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     contactmanagerdlg.cpp
     contactmanagermodel.cpp
     contactmanagerview.cpp
@@ -26,7 +23,6 @@ list(APPEND FORMS
 )
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(contactmanager STATIC ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(contactmanager STATIC ${HEADERS} ${SOURCES} ${UI_FORMS})
 target_link_libraries(contactmanager ${QT_LIBRARIES} widgets)
 target_include_directories(contactmanager PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/irisprotocol/irisprotocol.cmake b/src/irisprotocol/irisprotocol.cmake
index 1e3468b5..4dec341b 100644
--- a/src/irisprotocol/irisprotocol.cmake
+++ b/src/irisprotocol/irisprotocol.cmake
@@ -2,6 +2,6 @@ list(APPEND HEADERS
     irisprotocol/iris_discoinfoquerier.h
 )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     irisprotocol/iris_discoinfoquerier.cpp
 )
diff --git a/src/options/CMakeLists.txt b/src/options/CMakeLists.txt
index 6cdc916f..b69e4352 100644
--- a/src/options/CMakeLists.txt
+++ b/src/options/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 include_directories(..)
@@ -44,9 +41,7 @@ list(APPEND SOURCES
     optionsdlgbase.cpp
     optionstab.cpp
     opt_plugins.cpp
-)
 
-list(APPEND PLAIN_SOURCES
     optionsdlg.cpp
     opt_advanced.cpp
     opt_appearance.cpp
@@ -109,7 +104,6 @@ list(APPEND FORMS
 )
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(options STATIC ${SOURCES} ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(options STATIC ${SOURCES} ${HEADERS} ${UI_FORMS})
 target_link_libraries(options ${QT_LIBRARIES} tools widgets tabs libpsi_dialogs)
 target_include_directories(options PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/plugins/plugins.cmake b/src/plugins/plugins.cmake
index 2291246a..a038140f 100644
--- a/src/plugins/plugins.cmake
+++ b/src/plugins/plugins.cmake
@@ -47,6 +47,6 @@ list(APPEND PLUGINS_INCLUDES
     plugins/include/webkitaccessor.h
     plugins/include/webkitaccessinghost.h
 )
-list(APPEND PLAIN_HEADERS
+list(APPEND HEADERS
     ${PLUGINS_INCLUDES}
 )
diff --git a/src/privacy/CMakeLists.txt b/src/privacy/CMakeLists.txt
index e975d67c..4313ef6b 100644
--- a/src/privacy/CMakeLists.txt
+++ b/src/privacy/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 list(APPEND HEADERS
@@ -11,9 +8,7 @@ list(APPEND HEADERS
     privacymanager.h
     privacyruledlg.h
     psiprivacymanager.h
-)
 
-list(APPEND PLAIN_HEADERS
     privacylist.h
     privacylistblockedmodel.h
     privacylistitem.h
@@ -22,9 +17,7 @@ list(APPEND PLAIN_HEADERS
 
 list(APPEND SOURCES
     psiprivacymanager.cpp
-)
 
-list(APPEND PLAIN_SOURCES
     privacydlg.cpp
     privacylist.cpp
     privacylistblockedmodel.cpp
@@ -39,7 +32,6 @@ list(APPEND FORMS
 )
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(privacy STATIC ${SOURCES} ${HEADERS} ${SOURCES} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(privacy STATIC ${SOURCES} ${HEADERS} ${UI_FORMS})
 target_link_libraries(privacy ${QT_LIBRARIES} ${iris_LIB} libpsi_tools widgets tabs)
 target_include_directories(privacy PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/psidbusnotifier.cpp b/src/psidbusnotifier.cpp
index 9461514f..be4e1ae0 100644
--- a/src/psidbusnotifier.cpp
+++ b/src/psidbusnotifier.cpp
@@ -22,6 +22,7 @@
  *
  */
 
+#include "moc_psidbusnotifier.cpp"
 
 #include <QDBusConnection>
 #include <QDBusMessage>
diff --git a/src/psimedia/CMakeLists.txt b/src/psimedia/CMakeLists.txt
index 3c8b2e12..26a517d9 100644
--- a/src/psimedia/CMakeLists.txt
+++ b/src/psimedia/CMakeLists.txt
@@ -1,27 +1,21 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 list(APPEND HEADERS
     psimedia.h
     psimedia_p.h
-)
 
-list(APPEND PLAIN_HEADERS
     psimediaprovider.h
 )
 
-list(APPEND PLAIN_SOURCES
+list(APPEND SOURCES
     psimedia.cpp
 )
 
 add_definitions( -DQT_GUI_LIB )
 
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(psimedia STATIC ${SOURCES} ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES})
+add_library(psimedia STATIC ${SOURCES} ${HEADERS} ${UI_FORMS})
 target_link_libraries(psimedia ${QT_LIBRARIES})
 target_include_directories(psimedia PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/src.cmake b/src/src.cmake
index 61ec0f54..58c31e24 100644
--- a/src/src.cmake
+++ b/src/src.cmake
@@ -15,9 +15,9 @@ if(UNIX AND NOT (APPLE OR HAIKU))
         )
 endif()
 
-#if(APPLE)
-#    add_definitions(-DHAVE_GROWL)
-#endif()
+if(APPLE AND USE_GROWL)
+    add_definitions(-DHAVE_GROWL)
+endif()
 
 include_directories(.)
 
@@ -206,87 +206,6 @@ list(APPEND HEADERS
     voicecaller.h
     xdata_widget.h
     xmlconsole.h
-    )
-
-# Source files
-list(APPEND SOURCES
-    accountmanagedlg.cpp
-    actionlist.cpp
-    activecontactsmenu.cpp
-    ahcommanddlg.cpp
-    ahcservermanager.cpp
-    alerticon.cpp
-    avatars.cpp
-    contactlistaccountmenu.cpp
-    discodlg.cpp
-    eventdlg.cpp
-    filetransdlg.cpp
-    gcuserview.cpp
-    groupchatdlg.cpp
-    htmltextcontroller.cpp
-    httpauthmanager.cpp
-    mainwin_p.cpp
-    msgmle.cpp
-    proxy.cpp
-    psiaccount.cpp
-    psiactionlist.cpp
-    psichatdlg.cpp
-    psicon.cpp
-    psicontactlistview.cpp
-    psievent.cpp
-    psioptionseditor.cpp
-    psipopup.cpp
-    psirosterwidget.cpp
-    registrationdlg.cpp
-    searchdlg.cpp
-    xdata_widget.cpp
-    )
-
-if(UNIX AND NOT APPLE AND NOT HAIKU)
-    list(APPEND SOURCES
-        dbus.cpp
-        )
-
-    list(APPEND PLAIN_SOURCES
-        activeprofiles_dbus.cpp
-        psidbusnotifier.cpp
-        )
-
-    list(APPEND HEADERS
-        psidbusnotifier.h
-        )
-
-    list(APPEND PLAIN_HEADERS
-        dbus.h
-        )
-    list(APPEND PLAIN_SOURCES
-        x11windowsystem.cpp
-        )
-    list(APPEND PLAIN_HEADERS
-        x11windowsystem.h
-        )
-elseif(APPLE)
-    list(APPEND PLAIN_SOURCES
-        activeprofiles_stub.cpp
-        )
-#    list(APPEND SOURCES
-#        psigrowlnotifier.cpp
-#        )
-#
-#    list(APPEND HEADERS
-#        psigrowlnotifier.h
-#        )
-elseif(HAIKU)
-    list(APPEND PLAIN_SOURCES
-        activeprofiles_stub.cpp
-        )
-elseif(WIN32)
-    list(APPEND PLAIN_SOURCES
-        activeprofiles_win.cpp
-        )
-endif()
-
-list(APPEND PLAIN_HEADERS
     abstracttreeitem.h
     activity.h
     activitycatalog.h
@@ -331,9 +250,78 @@ list(APPEND PLAIN_HEADERS
     urlbookmark.h
     userlist.h
     varlist.h
+    edbsqlite.h
+    historyimp.h
     )
 
-list(APPEND PLAIN_SOURCES
+if(UNIX AND NOT APPLE AND NOT HAIKU)
+    list(APPEND SOURCES
+        dbus.cpp
+        activeprofiles_dbus.cpp
+        psidbusnotifier.cpp
+        x11windowsystem.cpp
+        )
+
+    list(APPEND HEADERS
+        psidbusnotifier.h
+        dbus.h
+        x11windowsystem.h
+        )
+elseif(APPLE)
+    list(APPEND SOURCES
+        activeprofiles_stub.cpp
+        )
+    if(USE_GROWL)
+        list(APPEND SOURCES
+            psigrowlnotifier.cpp
+            )
+
+        list(APPEND HEADERS
+            psigrowlnotifier.h
+            )
+    endif()
+elseif(HAIKU)
+    list(APPEND SOURCES
+        activeprofiles_stub.cpp
+        )
+elseif(WIN32)
+    list(APPEND SOURCES
+        activeprofiles_win.cpp
+        )
+endif()
+
+# Source files
+list(APPEND SOURCES
+    accountmanagedlg.cpp
+    actionlist.cpp
+    activecontactsmenu.cpp
+    ahcommanddlg.cpp
+    ahcservermanager.cpp
+    alerticon.cpp
+    avatars.cpp
+    contactlistaccountmenu.cpp
+    discodlg.cpp
+    eventdlg.cpp
+    filetransdlg.cpp
+    gcuserview.cpp
+    groupchatdlg.cpp
+    htmltextcontroller.cpp
+    httpauthmanager.cpp
+    mainwin_p.cpp
+    msgmle.cpp
+    proxy.cpp
+    psiaccount.cpp
+    psiactionlist.cpp
+    psichatdlg.cpp
+    psicon.cpp
+    psicontactlistview.cpp
+    psievent.cpp
+    psioptionseditor.cpp
+    psipopup.cpp
+    psirosterwidget.cpp
+    registrationdlg.cpp
+    searchdlg.cpp
+    xdata_widget.cpp
     aboutdlg.cpp
     abstracttreeitem.cpp
     abstracttreemodel.cpp
@@ -478,11 +466,13 @@ list(APPEND PLAIN_SOURCES
     vcardphotodlg.cpp
     voicecalldlg.cpp
     xmlconsole.cpp
+    edbsqlite.cpp
+    historyimp.cpp
     )
 
 if(ENABLE_WEBKIT)
     if(USE_WEBENGINE)
-        list(APPEND PLAIN_SOURCES
+        list(APPEND SOURCES
             themeserver.cpp
         )
         list(APPEND HEADERS
@@ -496,14 +486,10 @@ if(ENABLE_WEBKIT)
         chatviewtheme_p.h
         chatviewthemeprovider.h
         chatviewthemeprovider_priv.h
-        )
-    list(APPEND PLAIN_HEADERS
         jsutil.h
         )
     list(APPEND SOURCES
         chatview_webkit.cpp
-        )
-    list(APPEND PLAIN_SOURCES
         webview.cpp
         jsutil.cpp
         chatviewtheme.cpp
@@ -513,21 +499,10 @@ if(ENABLE_WEBKIT)
 else()
     list(APPEND HEADERS
         chatview_te.h
-        )
-    list(APPEND SOURCES
         chatview_te.cpp
         )
 endif()
 
-list(APPEND HEADERS
-    edbsqlite.h
-    historyimp.h
-    )
-list(APPEND PLAIN_SOURCES
-    edbsqlite.cpp
-    historyimp.cpp
-    )
-
 if(IS_PSIPLUS)
     list(APPEND FORMS
         sendbuttontemplateseditor.ui
@@ -535,7 +510,7 @@ if(IS_PSIPLUS)
     list(APPEND HEADERS
         sendbuttonmenu.h
     )
-    list(APPEND PLAIN_SOURCES
+    list(APPEND SOURCES
         sendbuttonmenu.cpp
     )
 endif()
diff --git a/src/sxe/CMakeLists.txt b/src/sxe/CMakeLists.txt
index 11f7958d..797e0d3c 100644
--- a/src/sxe/CMakeLists.txt
+++ b/src/sxe/CMakeLists.txt
@@ -1,15 +1,12 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 unset(EXTRA_LDFLAGS)
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
 
-set(PLAIN_SOURCES
+set(SOURCES
     sxeedit.cpp
     sxemanager.cpp
     sxenewedit.cpp
@@ -23,15 +20,12 @@ set(HEADERS
     sxemanager.h
     sxerecord.h
     sxesession.h
-)
 
-set(PLAIN_HEADERS
     sxeedit.h
     sxenewedit.h
     sxerecordedit.h
     sxeremoveedit.h
 )
 
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(sxe STATIC ${HEADERS} ${MOC_SOURCES} ${PLAIN_SOURCES} ${PLAIN_HEADERS})
+add_library(sxe STATIC ${HEADERS} ${SOURCES})
 target_link_libraries(sxe ${QT_LIBRARIES} ${iris_LIB} libpsi_tools widgets)
diff --git a/src/tabs/CMakeLists.txt b/src/tabs/CMakeLists.txt
index 5fbe021a..18ca3d2f 100644
--- a/src/tabs/CMakeLists.txt
+++ b/src/tabs/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 
 set(HEADERS
@@ -12,13 +9,12 @@ set(HEADERS
     tabbablewidget.h
 )
 
-set(PLAIN_SOURCES
+set(SOURCES
     tabdlg.cpp
     tabmanager.cpp
     tabbablewidget.cpp
 )
 
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(tabs STATIC  ${HEADERS} ${MOC_SOURCES} ${PLAIN_SOURCES})
+add_library(tabs STATIC  ${HEADERS} ${SOURCES})
 target_link_libraries(tabs ${QT_LIBRARIES} ${iris_LIB} tools widgets)
 target_include_directories(tabs PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/src/tools/CMakeLists.txt b/src/tools/CMakeLists.txt
index 925105f6..c586d344 100644
--- a/src/tools/CMakeLists.txt
+++ b/src/tools/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 unset(EXTRA_LDFLAGS)
 
@@ -14,9 +11,7 @@ list(APPEND SOURCES
 
     # advwidget
     advwidget/advwidget.cpp
-)
 
-list(APPEND PLAIN_SOURCES
     # optionstree
     optionstree/optionstree.cpp
     optionstree/optionstreemodel.cpp
@@ -51,9 +46,7 @@ list(APPEND HEADERS
     # psifile
     tunecontroller/tunecontrollermanager.h
     tunecontroller/plugins/psifile/psifileplugin.h
-)
 
-list(APPEND PLAIN_HEADERS
     # iconset
     iconset/anim.h
 
@@ -68,21 +61,21 @@ list(APPEND PLAIN_HEADERS
 )
 
 if(USE_CRASH)
-    list(APPEND PLAIN_HEADERS
+    list(APPEND HEADERS
         crash/crash.h
     )
 
     if(LINUX)
-        list(APPEND PLAIN_SOURCES
+        list(APPEND SOURCES
             crash/crash_sigsegv.cpp
             crash/crash.cpp
         )
-        list(APPEND PLAIN_HEADERS
+        list(APPEND HEADERS
             crash/crash_sigsegv.h
         )
     endif()
     if(WIN32)
-        list(APPEND PLAIN_SOURCES
+        list(APPEND SOURCES
             crash/crash_dummy.cpp
         )
     endif()
@@ -116,9 +109,7 @@ elseif(WIN32)
     add_definitions(-DTC_WINAMP -DTC_AIMP)
     list(APPEND SOURCES
         tunecontroller/plugins/aimp/aimpplugin.cpp
-    )
 
-    list(APPEND PLAIN_SOURCES
         tunecontroller/aimptunecontroller.cpp
         tunecontroller/winamptunecontroller.cpp
         tunecontroller/plugins/winamp/winampplugin.cpp
@@ -134,9 +125,7 @@ elseif(LINUX)
     add_definitions(-DTC_MPRIS)
     list(APPEND SOURCES
         tunecontroller/plugins/mpris/mprisplugin.cpp
-    )
 
-    list(APPEND PLAIN_SOURCES
         tunecontroller/mpristunecontroller.cpp
         tunecontroller/plugins/mpris/mprisplugin.cpp
     )
@@ -146,8 +135,7 @@ elseif(LINUX)
     )
 endif()
 
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(tools STATIC ${SOURCES} ${HEADERS} ${MOC_SOURCES} ${PLAIN_SOURCES} ${PLAIN_HEADERS})
+add_library(tools STATIC ${SOURCES} ${HEADERS})
 target_link_libraries(tools ${QT_LIBRARIES} ${iris_LIB} zip ${EXTRA_LDFLAGS})
 target_include_directories(tools PUBLIC
     ${CMAKE_CURRENT_SOURCE_DIR}
diff --git a/src/tools/tunecontroller/plugins/winamp/winampplugin.cpp b/src/tools/tunecontroller/plugins/winamp/winampplugin.cpp
index 150c3c2d..dd7d37b4 100644
--- a/src/tools/tunecontroller/plugins/winamp/winampplugin.cpp
+++ b/src/tools/tunecontroller/plugins/winamp/winampplugin.cpp
@@ -18,6 +18,7 @@
  */
 
 #include "winampplugin.h"
+#include "moc_winampplugin.cpp"
 
 
 QString WinAmpPlugin::name()
diff --git a/src/whiteboarding/CMakeLists.txt b/src/whiteboarding/CMakeLists.txt
index 70b33f2f..b3b6af47 100644
--- a/src/whiteboarding/CMakeLists.txt
+++ b/src/whiteboarding/CMakeLists.txt
@@ -1,15 +1,12 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 unset(EXTRA_LDFLAGS)
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
 
-set(PLAIN_SOURCES
+set(SOURCES
     wbdlg.cpp
     wbitem.cpp
     wbmanager.cpp
@@ -26,15 +23,12 @@ set(HEADERS
     wbmanager.h
     wbscene.h
     wbwidget.h
-)
 
-set(PLAIN_HEADERS
     wbnewimage.h
     wbnewitem.h
     wbnewpath.h
 )
 
-qt_wrap_cpp(MOC_SOURCES ${HEADERS})
-add_library(whiteboarding STATIC ${HEADERS} ${MOC_SOURCES} ${PLAIN_SOURCES} ${PLAIN_HEADERS})
+add_library(whiteboarding STATIC ${HEADERS} ${SOURCES})
 add_dependencies(whiteboarding build_ui_files)
 target_link_libraries(whiteboarding ${QT_LIBRARIES} tools widgets)
diff --git a/src/widgets/CMakeLists.txt b/src/widgets/CMakeLists.txt
index 76467483..148dc0ce 100644
--- a/src/widgets/CMakeLists.txt
+++ b/src/widgets/CMakeLists.txt
@@ -1,9 +1,6 @@
-unset(MOC_SOURCES)
 unset(HEADERS)
-unset(PLAIN_HEADERS)
 unset(FORMS)
 unset(SOURCES)
-unset(PLAIN_SOURCES)
 unset(UI_FORMS)
 unset(EXTRA_LDFLAGS)
 
@@ -19,9 +16,7 @@ set(SOURCES
     psitooltip.cpp
     tabbar.cpp
     urlobject.cpp
-)
 
-set(PLAIN_SOURCES
     actionlineedit.cpp
     pixmapratiolabel.cpp
     psitabbar.cpp
@@ -55,9 +50,7 @@ set(HEADERS
     updatingcombobox.h
     urllabel.h
     urlobject.h
-)
 
-set(PLAIN_HEADERS
     psirichtext.h
     psitooltip.h
     stretchwidget.h
@@ -68,7 +61,7 @@ set(FORMS
 )
 
 if(IS_PSIPLUS AND (EXISTS "${CMAKE_CURRENT_LIST_DIR}/psiwindowheader.cpp"))
-    list(APPEND PLAIN_SOURCES
+    list(APPEND SOURCES
         psiwindowheader.cpp
     )
     list(APPEND HEADERS
@@ -80,7 +73,6 @@ if(IS_PSIPLUS AND (EXISTS "${CMAKE_CURRENT_LIST_DIR}/psiwindowheader.cpp"))
 endif()
 
 qt5_wrap_ui(UI_FORMS ${FORMS})
-qt_wrap_cpp(MOC_SOURCES ${SOURCES} ${HEADERS})
-add_library(widgets STATIC ${SOURCES} ${HEADERS} ${MOC_SOURCES} ${UI_FORMS} ${PLAIN_SOURCES} ${PLAIN_HEADERS})
+add_library(widgets STATIC ${SOURCES} ${HEADERS} ${UI_FORMS})
 target_link_libraries(widgets ${QT_LIBRARIES} ${iris_LIB} libpsi_tools)
 target_include_directories(widgets PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
